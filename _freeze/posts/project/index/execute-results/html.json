{
  "hash": "b8709bc9a46f0feea26dfd92589e4627",
  "result": {
    "markdown": "---\ntitle: \"Reproducible Research Final Project\"\nauthor: \"Lukman Aliyu Jibril\"\ndate: \"2023-10-02\"\ncategories: [r programming,project,rpubs]\n---\n\n\n\n\nThis article is the final project of the Reproducible Research course on Coursera offered by John Hopkins University. I make an attempt to look at the U.S. National Oceanic and Atmospheric Administration's (NOAA) storm database and make deductions about the impact of these events on health and economy.\n\n## Data Loading\n\nFirst step is load the data. I used the read_csv from readr (tidyverse) and it was able to read the file even in the compressed state.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nstorm_data <- read_csv(\"repdata_data_StormData.csv.bz2\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 902297 Columns: 37\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (18): BGN_DATE, BGN_TIME, TIME_ZONE, COUNTYNAME, STATE, EVTYPE, BGN_AZI,...\ndbl (18): STATE__, COUNTY, BGN_RANGE, COUNTY_END, END_RANGE, LENGTH, WIDTH, ...\nlgl  (1): COUNTYENDN\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Data Cleaning and Transformation\n\nTo understand how the data look and the variables contained, use was made of the glimpse function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore the data\nglimpse(storm_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 902,297\nColumns: 37\n$ STATE__    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ BGN_DATE   <chr> \"4/18/1950 0:00:00\", \"4/18/1950 0:00:00\", \"2/20/1951 0:00:0…\n$ BGN_TIME   <chr> \"0130\", \"0145\", \"1600\", \"0900\", \"1500\", \"2000\", \"0100\", \"09…\n$ TIME_ZONE  <chr> \"CST\", \"CST\", \"CST\", \"CST\", \"CST\", \"CST\", \"CST\", \"CST\", \"CS…\n$ COUNTY     <dbl> 97, 3, 57, 89, 43, 77, 9, 123, 125, 57, 43, 9, 73, 49, 107,…\n$ COUNTYNAME <chr> \"MOBILE\", \"BALDWIN\", \"FAYETTE\", \"MADISON\", \"CULLMAN\", \"LAUD…\n$ STATE      <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\",…\n$ EVTYPE     <chr> \"TORNADO\", \"TORNADO\", \"TORNADO\", \"TORNADO\", \"TORNADO\", \"TOR…\n$ BGN_RANGE  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ BGN_AZI    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ BGN_LOCATI <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ END_DATE   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ END_TIME   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ COUNTY_END <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ COUNTYENDN <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ END_RANGE  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ END_AZI    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ END_LOCATI <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ LENGTH     <dbl> 14.0, 2.0, 0.1, 0.0, 0.0, 1.5, 1.5, 0.0, 3.3, 2.3, 1.3, 4.7…\n$ WIDTH      <dbl> 100, 150, 123, 100, 150, 177, 33, 33, 100, 100, 400, 400, 2…\n$ F          <dbl> 3, 2, 2, 2, 2, 2, 2, 1, 3, 3, 1, 1, 3, 3, 3, 4, 1, 1, 1, 1,…\n$ MAG        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ FATALITIES <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0,…\n$ INJURIES   <dbl> 15, 0, 2, 2, 2, 6, 1, 0, 14, 0, 3, 3, 26, 12, 6, 50, 2, 0, …\n$ PROPDMG    <dbl> 25.0, 2.5, 25.0, 2.5, 2.5, 2.5, 2.5, 2.5, 25.0, 25.0, 2.5, …\n$ PROPDMGEXP <chr> \"K\", \"K\", \"K\", \"K\", \"K\", \"K\", \"K\", \"K\", \"K\", \"K\", \"M\", \"M\",…\n$ CROPDMG    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ CROPDMGEXP <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ WFO        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ STATEOFFIC <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ZONENAMES  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ LATITUDE   <dbl> 3040, 3042, 3340, 3458, 3412, 3450, 3405, 3255, 3334, 3336,…\n$ LONGITUDE  <dbl> 8812, 8755, 8742, 8626, 8642, 8748, 8631, 8558, 8740, 8738,…\n$ LATITUDE_E <dbl> 3051, 0, 0, 0, 0, 0, 0, 0, 3336, 3337, 3402, 3404, 0, 3432,…\n$ LONGITUDE_ <dbl> 8806, 0, 0, 0, 0, 0, 0, 0, 8738, 8737, 8644, 8640, 0, 8540,…\n$ REMARKS    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ REFNUM     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n```\n:::\n:::\n\n\nNext, since the most important variable in this analysis is the `EVTYPE` variable, there's a need to ensure that there are no missing values. I may plot or do summary statistics and missing values could cause problems in either of these activities.\n\nI also got the sum of fatalities, injuries and property damage as these are important in determining health and economic impact of the events.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Cleaning\ncleaned_storm_data <- storm_data |> \n  filter(!is.na(EVTYPE)) |> \n  mutate(PROPDMG = PROPDMG * ifelse(PROPDMGEXP %in% c(\"K\", \"M\"), 1000, 1))\n\n\n# Summary Statistics\nsummary_stats <- cleaned_storm_data |> \n  summarise(\n    total_fatalities = sum(FATALITIES),\n    total_injuries = sum(INJURIES),\n    total_damage = sum(PROPDMG)\n  )\nsummary_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  total_fatalities total_injuries total_damage\n             <dbl>          <dbl>        <dbl>\n1            15145         140528 10875995063.\n```\n:::\n:::\n\n\n## Results\n\n### Population Health Impact\n\nNext, to properly look at the population health impact, the dataset is grouped by event type and sum of the fatalities and injuries are compared in a variable called event_harm. This variable is then plotted, taking a look at the top 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nevent_harm <- cleaned_storm_data |> \n  group_by(EVTYPE) |> \n  summarise(total_harm = sum(FATALITIES + INJURIES)) |> arrange(desc(total_harm))\n\n# Visualization\nevent_harm |> \n  top_n(10, total_harm) |> \n  ggplot(aes(x = reorder(EVTYPE, -total_harm), y = total_harm)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(\n    title = \"Top 10 Events with Highest Population Health Impact\",\n    x = \"Event Type\",\n    y = \"Total Harm\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### Economic Consequences\n\nThe final aspect is to analyse and check the economic consequences. Naturally, property damage is one of the metrics for measuring economic consequences of events like these. The data is grouped by event type and the property damage associated with each event is calculated. This is stored in a variable called event_damage that is then visualized.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nevent_damage <- cleaned_storm_data |> \n  group_by(EVTYPE) |> \n  summarise(total_damage = sum(PROPDMG)) |> \n  arrange(desc(total_damage))\n\n# Visualization\nevent_damage |> \n  top_n(10, total_damage) |> \n  ggplot(aes(x = reorder(EVTYPE, -total_damage), y = total_damage)) +\n  geom_bar(stat = \"identity\", fill = \"red\") +\n  labs(\n    title = \"Top 10 Events with Greatest Economic Consequences\",\n    x = \"Event Type\",\n    y = \"Total Damage\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Conclusion\n\nLooking at population health impact, tornadoes are the most harmful. \nAlso, on economic impact, tornadoes are still the most damaging event followed in order by flash floods, TSTM wind, flood, thunderstorm wind, hail,lightning, thunderstorm winds, high wind and winterstorm as the top ten events that cause the most economic damage. \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}